CORS Header Policy Info:
https://medium.com/@tcbasche/cors-in-spring-boot-with-kotlin-55eb5385f0e
Handle CORS headers for requests
Temp Solution: Define allowed origins

// Examples API Calls without Spring Boot JPA
@RequestMapping(path = ["/colleges"])
@RestController
class GetCollegeData(@Autowired val jdbcTemplate: JdbcTemplate) {
    @CrossOrigin(origins = ["http://localhost:3000"])
    @GetMapping
    fun index(): List<College> {
        var colleges =  jdbcTemplate.query(
                "SELECT * FROM CollegeData"
        ) { rs, rowNum ->
            College(rs.getString("id"),
                    rs.getString("college_name"),
                    rs.getDouble("GPA"))
        }
        return colleges
    }
}

@RequestMapping(path = ["/add"])
@RestController
class AddNewCollege(@Autowired val jdbcTemplate: JdbcTemplate) {
    @CrossOrigin(origins = ["http://localhost:3000"])
    @GetMapping
    fun addCollege(): String {
        var SQL = "INSERT INTO CollegeData (college_name, GPA) VALUES ('University of Texas', 3.87)"
        var res = jdbcTemplate.update(SQL)
        if (res > 0) {
            return "Added New Row"
        } else {
            return "Failed"
        }
    }
}

data class College(val id: String, val college_name: String, val GPA: Double)







Old CollegeData JPA object
//@Entity
//@Table(name = "CollegeData")
//data class College (
//        @Id
//        @GeneratedValue(strategy = GenerationType.IDENTITY)
//        @Column(name = "id")
//        var id : Int?,
//
//        @Column(name = "college_name")
//        var college_name: String,
//
//        @Column(name = "GPA")
//        var GPA : Float,
//)

Old Application Class
//@Id
//@GeneratedValue(strategy = GenerationType.IDENTITY)
//@Column(name = "id")
//var id : Int?,
//
//@Column(name = "GPA")
//var GPA : Float,
//
//@Column(name = "state")
//var state: String,
//
//@ManyToOne
//@JoinColumn(name = "college_id", referencedColumnName = "id")
//var college : College,

Old College Class
//@Id
//@GeneratedValue(strategy = GenerationType.IDENTITY)
//@Column(name = "id")
//var id : Int?,
//
//@Column(name = "college_name")
//var college_name: String,
//
//@Column(name = "location")
//var location : String,